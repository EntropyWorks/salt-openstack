global
  log 127.0.0.1   local0
  log 127.0.0.1   local1 notice
  #log loghost    local0 info
  maxconn 4096
  #debug
  #quiet
  user haproxy
  group haproxy
  stats socket /var/lib/haproxy/stats mode 777

defaults
  log     global
  mode    http
  retries 3
  timeout client 61s
  timeout server 61s
  option dontlognull
  #option httplog
  option redispatch
  balance  leastconn

## Set up application listeners here.
#frontend keystone
#  mode tcp
#  option tcplog
#  maxconn 2000
#  bind 0.0.0.0:5010
#  default_backend keystone
#
#backend keystone
#  mode tcp
#  balance leastconn
#  option httpchk
#  option tcplog
#  option ssl-hello-chk
#  option socket-stats
#  server key_1 10.8.52.16:5000 check inter 15s
#  server key_2 10.8.53.73:5000 check inter 15s
#  server key_3 10.8.54.17:5000 check inter 15s
#
#frontend keystone_admin
#  mode tcp
#  option tcplog
#  maxconn 2000
#  bind 0.0.0.0:35367
#  default_backend keystone_admin
#
#backend keystone_admin
#  mode tcp
#  balance leastconn
#  option httpchk
#  option tcplog
#  option ssl-hello-chk
#  option socket-stats
#  server key_1 10.8.52.16:35357 check inter 15s
#  server key_2 10.8.53.73:35357 check inter 15s
#  server key_3 10.8.54.17:35357 check inter 15s
#
#frontend nova
#  mode tcp
#  option tcplog
#  maxconn 2000
#  bind 0.0.0.0:8784
#  default_backend nova
#
#backend nova
#  mode tcp
#  balance leastconn
#  option httpchk
#  option tcplog
#  option ssl-hello-chk
#  option socket-stats
#  server nova_1 10.8.52.16:8774 check inter 15s
#  server nova_2 10.8.53.73:8774 check inter 15s
#  server nova_3 10.8.54.17:8774 check inter 15s
#
#frontend nova_cp
#  mode tcp
#  option tcplog
#  maxconn 2000
#  bind 0.0.0.0:8774
#  default_backend nova_cp
#
#backend nova_cp
#  mode tcp
#  balance leastconn
#  option httpchk
#  option tcplog
#  option ssl-hello-chk
#  option socket-stats
#  server nova_1 10.8.52.16:8774 check inter 15s
#  server nova_2 10.8.53.73:8774 check inter 15s
#  server nova_3 10.8.54.17:8774 check inter 15s
#
#frontend glance
#  mode tcp
#  option tcplog
#  maxconn 2000
#  bind 0.0.0.0:9302
#  default_backend glance
#
#backend glance
#  mode tcp
#  balance leastconn
#  option httpchk
#  option tcplog
#  option ssl-hello-chk
#  option socket-stats
#  server glance_1 10.8.52.16:9292 check inter 15s
#  server glance_2 10.8.53.73:9292 check inter 15s
#  server glance_3 10.8.54.17:9292 check inter 15s
#
#frontend cinder
#  mode tcp
#  option tcplog
#  maxconn 2000
#  bind 0.0.0.0:8786
#  default_backend cinder
#
#backend cinder
#  mode tcp
#  balance leastconn
#  option httpchk
#  option tcplog
#  option ssl-hello-chk
#  option socket-stats
#  server cinder_1 10.8.52.16:8776 check inter 15s
#  server cinder_2 10.8.53.73:8776 check inter 15s
#  server cinder_3 10.8.54.17:8776 check inter 15s
#
#frontend ec2
#  mode tcp
#  option tcplog
#  maxconn 2000
#  bind 0.0.0.0:8783
#  default_backend ec2
#
#backend ec2
#  mode tcp
#  balance leastconn
#  option httpchk
#  option tcplog
#  option ssl-hello-chk
#  option socket-stats
#  server ec2_1 10.8.52.16:8773 check inter 15s
#  server ec2_2 10.8.53.73:8773 check inter 15s
#  server ec2_3 10.8.54.17:8773 check inter 15s

frontend mysql
  mode tcp
  option tcplog
  maxconn 2000
  bind 0.0.0.0:3306
  default_backend mysql

backend mysql
  mode tcp
  balance leastconn
  option httpchk
  option tcplog
  {% for galera_server, galera_ip in pillar['endpoints']['galera']['servers'].iteritems() -%}
  server {{ galera_server }} {{ galera_ip  }}:3306 check port 9200 inter 12000 rise 3 fall 3
  {% endfor %}

listen admin 0.0.0.0:22002
  mode http
  stats uri /
