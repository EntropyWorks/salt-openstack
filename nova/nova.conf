# Settings controlled via Salt
[DEFAULT]
verbose={{ nova.verbose }}
debug={{ nova.debug }}

node_availability_zone={{ endpoints.nova.availability_zone }}

multi_host={{ nova.multi_host }}
send_arp_for_ha={{ nova.send_arp_for_ha }}

enabled_apis=ec2,osapi_compute,metadata,openstack_compute_api_v2
enabled_ssl_apis=ec2,osapi_compute,metadata,openstack_compute_api_v2
scheduler_default_filters={{ nova.scheduler_default_filters }}
scheduler_host_subset_size=5


# Config for a Nova Controller Node
# MySQL Connection #
sql_connection=mysql://nova:{{ secrets.nova.db_password }}@{{ endpoints.hosts.database }}/nova?charset=utf8
sql_idle_timeout=360
#  IP address for OpenStack API to listen
osapi_volume_listen={{  endpoints.nova.osapi_volume_listen }}

# Services offered #
#s3_host={{ endpoints.nova.s3_host }}
#cc_host={{ endpoints.nova.cc_host }}

# IP address for EC2 API to listen
#ec2_listen={{ endpoints.nova.host }}
#ec2_host={{  endpoints.nova.ec2_host }}
#ec2_dmz_host={{  endpoints.nova.ec2_dmz_host }}
#ec2_url={{ nova.protocol }}://{{ endpoints.nova.ec2_url }}

osapi_compute_listen={{  endpoints.nova.osapi_compute_listen }}
# IP address for metadata api to listen
metadata_listen={{ endpoints.nova.metadata_listen }}

nova_url={{ nova.protocol }}://{{ endpoints.nova.nova_url }}


# Logging #
use_syslog=true
syslog_log_facility=LOG_LOCAL0
logdir=/var/log/nova
state_path=/var/lib/nova
lock_path=/var/lock/nova

# Paths to important items #
rootwrap_config=/etc/nova/rootwrap.conf
api_paste_config=/etc/nova/api-paste.ini
keys_path=/var/lib/nova/keys

# Auth
use_deprecated_auth=false
auth_strategy=keystone
keystone_ec2_url={{ keystone.auth_protocol }}://{{ endpoints.hosts.keystone }}:5000/v2.0/ec2tokens

# Imaging service
image_service=nova.image.glance.GlanceImageService
glance_api_servers={{glance.protocol}}://{{ endpoints.hosts.glance }}:{{ glance.port }}
glance_api_insecure = True

novnc_enabled=True
#novncproxy_base_url={{ nova.protocol }}://{{ endpoints.hosts.glance }}:6080/vnc_auto.html
novncproxy_base_url=http://{{ salt['network.interfaces']()['bond0']['inet'][0]['address'] }}:6080/vnc_auto.html
novncproxy_port=6080
vncserver_proxyclient_address={{ salt['network.interfaces']()['bond0']['inet'][0]['address'] }}
vncserver_listen={{ salt['network.interfaces']()['bond0']['inet'][0]['address'] }}

firewall_driver=nova.virt.libvirt.firewall.IptablesFirewallDriver
dhcpbridge_flagfile=/etc/nova/nova.conf
dhcpbridge={{ nova.dhcpbridge }}

network_manager=nova.network.manager.FlatDHCPManager
public_interface={{ endpoints.nova.network.public_interface }}
fixed_range={{ endpoints.nova.network.fixed_range }}
my_ip={{ salt['network.interfaces']()['bond0']['inet'][0]['address'] }}
flat_interface={{ endpoints.nova.network.flat_interface}}
flat_network_bridge=br100
default_floating_pool={{ endpoints.nova.availability_zone }}
auto_assign_floating_ip=true
force_dhcp_release=true
update_dns_entries=true

# Cinder #
volume_api_class=nova.volume.cinder.API
osapi_volume_listen_port=5900

# Rabbit #
{% if pillar['endpoints']['hosts']['rabbit_cluster'] -%}
# Rabbit Cluster Setup #
rabbit_hosts="{{ pillar['endpoints']['hosts']['rabbit_cluster'] }}"
{% else -%}
# Rabbit Setup #
rabbit_host={{ pillar['endpoints']['hosts']['rabbit'] }}
rabbit_port = 5672
{% endif -%}
{% if pillar['rabbit']['use_ssl'] -%}
rabbit_use_ssl: true
{% endif -%}
{% if pillar['rabbit']['ha_queues'] -%}
rabbit_ha_queues: true
{% endif -%}
rabbit_userid = guest
rabbit_password = {{ secrets.rabbit.password }}
rabbit_virtual_host = /

# Virt driver
max_cores=25
libvirt_type={{ nova.libvirt_type }}
compute_driver={{ nova.compute_driver }}
libvirt_use_virtio_for_bridges=true
resume_guests_state_on_host_boot=true
libvirt_sparse_logical_volumes=false
libvirt_snapshot_compression=true

# Resize Options
#resize_confirm_window=2
# Clean up deleted instances
#running_deleted_instance_timeout=43200

# ================= SSL Options ===============================
# Certificate file to use when starting API server securely
ssl_cert_file = /etc/nova/ssl/hpcs_cert.pem
# Private key file to use when starting API server securely
ssl_key_file = /etc/nova/ssl/hpcs_key.pem

